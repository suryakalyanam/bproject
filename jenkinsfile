@library ('pipeline-library-demo')_
def mymethod(string name='human'){
    echo "Hello,${name}."
    echo "Hello,${name}."
    
}
node('maven-label'){
   def mvn home
     stage('ref-lib'){
    mymethod 'Intellipath'
    }
    stage('demo'){
       echo 'Hello world'
       sayhello 'Dave'
    }
    stage('Preparation') {
      
      git 'https://github.com/suryakalyanam/bproject.git'
                
      mvnHome = tool 'maven'
   }
   stage('Build') {
       withEnv(["MVN_HOME=$mvnHome"]) {
         if (isUnix()) {
            sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
         } else {
            bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
         }
      }
   }
   stage('Results') {
      junit '**/target/surefire-reports/TEST-*.xml'
       archiveArtifacts 'target/*.jar'
   }
}
 
